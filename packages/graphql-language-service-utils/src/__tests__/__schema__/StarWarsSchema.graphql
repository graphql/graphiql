schema {
  query: Query
}

directive @test(testArg: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

enum Episode {
  NEWHOPE
  EMPIRE
  JEDI
}

interface Character {
  id: String!
  name: String
  friends: [Character]
  appearsIn: [Episode]
  secretBackstory: String
}

type Human implements Character {
  id: String!
  name: String
  friends: [Character]
  appearsIn: [Episode]
  secretBackstory: String
}

type Droid implements Character {
  id: String!
  name: String
  friends: [Character]
  appearsIn: [Episode]
  secretBackstory: String
  primaryFunction: String
}

"""
example input type
"""
input InputType {
  """
  example key
  """
  key: String!
  """
  example value
  """
  value: Int = 42

  """
  nesting a whole object!
  """
  exampleObject: ChildInputType!

  """
  list type with fancy default
  """
  exampleList: [ChildInputType] = [
    { isBaby: false, favoriteBook: "Goosebumps" }
  ]
}

"""
my baby
"""
input ChildInputType {
  isBaby: Boolean! = true
  favoriteBook: String = "Dinotopia"
}

type TestType {
  testField: String
}

type Query {
  hero(episode: Episode): Character
  human(id: String!): Human
  droid(id: String!): Droid
  inputTypeTest(args: InputType = { key: "key" }): TestType
}

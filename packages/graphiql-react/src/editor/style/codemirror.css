@import url('codemirror/lib/codemirror.css');

/* Make the editors fill up their container and make them scrollable */
.CodeMirror {
  height: 100%;
  position: absolute;
  width: 100%;
}

/* Override font settings */
.CodeMirror {
  font-family: var(--font-family-mono);
}

/* Set default background color */
.CodeMirror,
.CodeMirror-gutters {
  background: none;
  background-color: var(--editor-background, var(--color-neutral-0));
}

/* No padding around line number */
.CodeMirror-linenumber {
  padding: 0;
}

/* No border between gutter and editor */
.CodeMirror-gutters {
  border: none;
}

/**
 * Editor theme
 */

.cm-s-graphiql {
  /* Default to punctuation */
  color: var(--color-neutral-60);

  /* OperationType, `fragment`, `on` */
  & .cm-keyword {
    color: var(--color-pink);
  }
  /* Name (OperationDefinition), FragmentName */
  & .cm-def {
    color: var(--color-teal);
  }
  /* Punctuator (except `$` and `@`) */
  & .cm-punctuation {
    color: var(--color-neutral-60);
  }
  /* Variable */
  & .cm-variable {
    color: var(--color-purple);
  }
  /* NamedType */
  & .cm-atom {
    color: var(--color-teal);
  }
  /* IntValue, FloatValue */
  & .cm-number {
    color: var(--color-green);
  }
  /* StringValue */
  & .cm-string {
    color: var(--color-orche);
  }
  /* BooleanValue */
  & .cm-builtin {
    color: var(--color-green);
  }
  /* EnumValue */
  & .cm-string-2 {
    color: var(--color-purple);
  }
  /* Name (ObjectField, Argument) */
  & .cm-attribute {
    color: var(--color-blue);
  }
  /* Name (Directive) */
  & .cm-meta {
    color: var(--color-teal);
  }
  /* Name (Alias, Field without Alias) */
  & .cm-property {
    color: var(--color-blue);
  }
  /* Name (Field with Alias) */
  & .cm-qualifier {
    color: var(--color-purple);
  }
  /* Comment */
  & .cm-comment {
    color: var(--color-neutral-40);
  }
  /* Whitespace */
  & .cm-ws {
    color: var(--color-neutral-40);
  }
  /* Invalid characters */
  & .cm-invalidchar {
    color: var(--color-red);
  }

  /* Cursor */
  & .CodeMirror-cursor {
    border-left: 2px solid var(--color-neutral-60);
  }

  /* Color for line numbers and fold-gutters */
  & .CodeMirror-linenumber {
    color: var(--color-neutral-40);
  }
}

/* Matching bracket colors */
div.CodeMirror span.CodeMirror-matchingbracket,
div.CodeMirror span.CodeMirror-nonmatchingbracket {
  color: var(--color-neutral-40);
}

/* Selected text blocks */
.CodeMirror-selected,
.CodeMirror-focused .CodeMirror-selected {
  background: var(--color-neutral-15);
}

/* Position the search dialog */
.CodeMirror-dialog {
  background: inherit;
  color: inherit;
  left: 0;
  right: 0;
  overflow: hidden;
  padding: var(--px-2) var(--px-6);
  position: absolute;
  z-index: 6;
}
.CodeMirror-dialog-top {
  border-bottom: 1px solid var(--color-neutral-15);
  padding-bottom: var(--px-12);
  top: 0;
}
.CodeMirror-dialog-bottom {
  border-top: 1px solid var(--color-neutral-15);
  bottom: 0;
  padding-top: var(--px-12);
}

/* Hide the search hint */
.CodeMirror-search-hint {
  display: none;
}

/* Style the input field for searching */
.CodeMirror-dialog input {
  border: 1px solid var(--color-neutral-15);
  border-radius: var(--border-radius-4);
  padding: var(--px-4);
}
.CodeMirror-dialog input:focus {
  outline: var(--color-pink) solid 2px;
}

/* Set the highlight color for search results */
.cm-searching {
  background-color: var(--color-orche-background);
  /**
   * When cycling through search results, CodeMirror overlays the current 
   * selection with another element that has the .CodeMirror-selected class
   * applied. This adds another background color (see above), but this extra
   * box does not quite match the height of this element. To match them up we
   * add some extra padding here. (Note that this doesn't affect the line
   * height of the CodeMirror editor as all line wrappers have a fixed height.)
   */
  padding-bottom: 1.5px;
  padding-top: 0.5px;
}
